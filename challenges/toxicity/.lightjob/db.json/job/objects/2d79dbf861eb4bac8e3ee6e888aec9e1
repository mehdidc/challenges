{"summary": "f33385eecb120867d312fdc9ebc100d2", "life": [{"state": "success", "dt": "Sun Feb 25 16:05:24 2018"}], "end": "2018-02-25 16:05:23.761075", "stats": {"test": {"time": 90.10804533958435, "avg_auc": 0.9745666471839893}, "train_full": {"avg_auc": 0.9995172756547092}, "train": {"time": [24.02253222465515, 23.612760543823242, 24.07338809967041, 24.393945455551147, 23.898637533187866], "avg_auc": [0.9996903426594606, 0.9996806720233081, 0.9997457018308632, 0.9996761270860635, 0.9996695566334729]}, "valid": {"time": [9.296876907348633, 9.139483213424683, 9.189749717712402, 9.168799638748169, 9.114774227142334], "avg_auc": [0.9688126493005059, 0.9705438126304488, 0.9695180040892418, 0.965933509005354, 0.9688262567746793]}, "stats": [null, null, null, null, null]}, "sampler": "challenges.toxicity.samplers.tfidf", "state": "success", "content": {"codes": {"classifier": "\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import make_pipeline\n\nclass Classifier:\n\n    def __init__(self):\n        self.clf = make_pipeline(\n            TfidfVectorizer(),\n            RandomForestClassifier(max_depth=94, n_estimators=200, n_jobs=-1),\n        )\n    \n    def fit(self, X, y):\n        self.clf.fit(X, y)\n    \n    def predict(self, X):\n        return self.clf.predict(X)\n\n    def predict_proba(self, X):\n        return self.clf.predict_proba(X)\n"}, "info": {"max_depth": 94, "n_estimators": 200}, "problem": "challenges.toxicity.problem", "sampler": "challenges.toxicity.samplers.tfidf"}, "traceback": "", "duration": 257.096623, "start": "2018-02-25 16:01:06.664452", "problem": "challenges.toxicity.problem"}