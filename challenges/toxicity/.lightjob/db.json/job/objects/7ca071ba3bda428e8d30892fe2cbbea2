{"state": "success", "duration": 440.559186, "stats": {"train": {"time": [52.62835359573364, 54.27393555641174, 53.79271197319031, 53.98814868927002, 53.42833709716797], "avg_auc": [0.6365578925448803, 0.6340405834921081, 0.6347521031712802, 0.646111073705489, 0.6389264468006102]}, "valid": {"time": [14.028228044509888, 14.31587266921997, 13.997113227844238, 13.941636323928833, 14.331941604614258], "avg_auc": [0.530782031473552, 0.5256497844269025, 0.5234204214711706, 0.524346695442912, 0.5251795490195643]}, "stats": [null, null, null, null, null], "train_full": {"avg_auc": 0.5830400477306422}, "test": {"time": 100.72653722763062, "avg_auc": 0.5269093888427929}}, "end": "2018-02-25 13:53:10.115677", "sampler": "challenges.toxicity.samplers.tfidf", "traceback": "", "life": [{"state": "success", "dt": "Sun Feb 25 13:53:10 2018"}], "start": "2018-02-25 13:45:49.556491", "content": {"info": {"n_estimators": 300, "max_depth": 92}, "codes": {"classifier": "\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import make_pipeline\n\nclass Classifier:\n\n    def __init__(self):\n        self.clf = make_pipeline(\n            TfidfVectorizer(),\n            RandomForestClassifier(max_depth=92, n_estimators=300, n_jobs=-1),\n        )\n    \n    def fit(self, X, y):\n        self.clf.fit(X, y)\n    \n    def predict(self, X):\n        return self.clf.predict(X)\n\n    def predict_proba(self, X):\n        return self.clf.predict_proba(X)\n"}, "sampler": "challenges.toxicity.samplers.tfidf", "problem": "challenges.toxicity.problem"}, "summary": "8a4583c9af026f6478bfda2cc65368d4", "problem": "challenges.toxicity.problem"}