{"end": "2018-02-25 15:39:56.601762", "traceback": "", "sampler": "challenges.toxicity.samplers.tfidf", "problem": "challenges.toxicity.problem", "state": "success", "stats": {"test": {"time": 90.3597502708435, "avg_auc": 0.97525926723427}, "valid": {"time": [9.238117933273315, 8.970233917236328, 9.099947690963745, 9.208122253417969, 9.264337539672852], "avg_auc": [0.9682031254928075, 0.9677141969906632, 0.9653723554486205, 0.9698797656739767, 0.9633123397271238]}, "train": {"time": [21.701931953430176, 22.893266916275024, 22.482569217681885, 22.512476444244385, 23.098551988601685], "avg_auc": [0.9995650576559173, 0.9996295972621992, 0.9995721335552217, 0.9996437452888731, 0.999592250478163]}, "train_full": {"avg_auc": 0.9994018994126525}, "stats": [null, null, null, null, null]}, "summary": "90c58c13577845f45fc0d9e14864911f", "start": "2018-02-25 15:35:46.685684", "duration": 249.916078, "life": [{"state": "success", "dt": "Sun Feb 25 15:39:57 2018"}], "content": {"info": {"n_estimators": 200, "max_depth": 88}, "sampler": "challenges.toxicity.samplers.tfidf", "codes": {"classifier": "\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import make_pipeline\n\nclass Classifier:\n\n    def __init__(self):\n        self.clf = make_pipeline(\n            TfidfVectorizer(),\n            RandomForestClassifier(max_depth=88, n_estimators=200, n_jobs=-1),\n        )\n    \n    def fit(self, X, y):\n        self.clf.fit(X, y)\n    \n    def predict(self, X):\n        return self.clf.predict(X)\n\n    def predict_proba(self, X):\n        return self.clf.predict_proba(X)\n"}, "problem": "challenges.toxicity.problem"}}