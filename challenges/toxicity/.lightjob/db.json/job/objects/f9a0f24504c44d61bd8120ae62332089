{"traceback": "", "summary": "425bdcf2c7d1c16b27a3946719a57214", "start": "2018-02-25 16:14:23.263089", "problem": "challenges.toxicity.problem", "state": "success", "end": "2018-02-25 16:18:29.772728", "sampler": "challenges.toxicity.samplers.tfidf", "duration": 246.509639, "stats": {"valid": {"avg_auc": [0.9670539606187686, 0.9621769566641557, 0.9641825148083952, 0.9668334281768635, 0.9630065706532513], "time": [9.39640498161316, 9.130287408828735, 9.24989104270935, 9.359673500061035, 9.214312553405762]}, "train_full": {"avg_auc": 0.9993235185947005}, "train": {"avg_auc": [0.9995061264619318, 0.9995182698383802, 0.9995520788722603, 0.9995712879402631, 0.9995560529115767], "time": [21.14847207069397, 21.56067132949829, 21.540895462036133, 21.811023950576782, 21.578152656555176]}, "test": {"avg_auc": 0.973436346248406, "time": 91.42958402633667}, "stats": [null, null, null, null, null]}, "life": [{"dt": "Sun Feb 25 16:18:30 2018", "state": "success"}], "content": {"info": {"n_estimators": 200, "max_depth": 83}, "codes": {"classifier": "\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import make_pipeline\n\nclass Classifier:\n\n    def __init__(self):\n        self.clf = make_pipeline(\n            TfidfVectorizer(),\n            RandomForestClassifier(max_depth=83, n_estimators=200, n_jobs=-1),\n        )\n    \n    def fit(self, X, y):\n        self.clf.fit(X, y)\n    \n    def predict(self, X):\n        return self.clf.predict(X)\n\n    def predict_proba(self, X):\n        return self.clf.predict_proba(X)\n"}, "problem": "challenges.toxicity.problem", "sampler": "challenges.toxicity.samplers.tfidf"}}